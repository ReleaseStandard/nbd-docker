name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    tags:
      - v0.0.0

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: unofficial-nbd

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  #test:
  #  runs-on: ubuntu-latest
  #
  #  steps:
  #    - uses: actions/checkout@v2
  #
  #   - name: Run tests
  #     run: |
  #        if [ -f docker-compose.test.yml ]; then
  #          docker-compose --file docker-compose.test.yml build
  #          docker-compose --file docker-compose.test.yml run sut
  #        else
  #          docker build . --file Dockerfile
  #        fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.PAT }}" | docker login docker.pkg.github.com -u ReleaseStandard --password-stdin 
      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $IMAGE_ID docker.pkg.github.com/releasestandard/repository-name/$IMAGE_NAME:$VERSION

          #docker push $IMAGE_ID:$VERSION
          docker push docker.pkg.github.com/releasestandard/repository-name/$IMAGE_NAME:$VERSION
          
